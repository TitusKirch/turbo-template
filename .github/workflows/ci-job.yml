name: CI Job

on:
  workflow_call:
    inputs:
      os:
        description: "Operating system"
        required: true
        type: string
      node-version:
        description: "Node.js version"
        required: true
        type: string
      github-event-name:
        description: "GitHub event name"
        required: true
        type: string

jobs:
  prepare:
    runs-on: ${{ inputs.os }}
    timeout-minutes: 10

    name: Prepare on Node.js ${{ inputs.node-version }} (${{ inputs.os }}) 
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable corepack
        run: corepack enable
      
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: "pnpm"

      - name: Restore node_modules folder
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ inputs.os }}-node-${{ inputs.node-version }}-${{ github.base_ref }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache node_modules folder
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ inputs.os }}-node-${{ inputs.node-version }}-${{ github.base_ref }}


  lint-and-format:
    needs:
      - prepare
    runs-on: ${{ inputs.os }}
    timeout-minutes: 10

    name: Lint and format on Node.js ${{ inputs.node-version }} (${{ inputs.os }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable corepack
        run: corepack enable
      
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: "pnpm"
      
      - name: Restore node_modules folder
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ inputs.os }}-node-${{ inputs.node-version }}-${{ github.base_ref }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Linting
        run: pnpm run lint

      - name: Formatting
        run: pnpm run format

  build:
    needs:
      - prepare
    runs-on: ${{ inputs.os }}
    timeout-minutes: 10

    name: Build on Node.js ${{ inputs.node-version }} (${{ inputs.os }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable corepack
        run: corepack enable
      
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: "pnpm"

      - name: Restore node_modules folder
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ inputs.os }}-node-${{ inputs.node-version }}-${{ github.base_ref }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build:ci
      
      - name: Cache .turbo folder
        uses: actions/cache@v3
        with:
          path: .turbo
          key: ${{ inputs.os }}-turbo-${{ inputs.node-version }}-${{ github.sha }}